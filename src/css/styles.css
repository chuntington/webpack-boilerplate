@tailwind base;
@tailwind components;

/*
 * PostcssPresetEnv allows us to use staged, proposed and approved CSS features
 * and specifications.
 *
 * By default, specifications that have reached stage 1+ will be polyfilled, as
 * well as nesting-rules and the color-mod function.
 */
:root {
	--custom-header-font-family: "Permanent Marker", sans-serif;
	--custom-header-font-weight: 800;
	--opaque-black: color-mod(theme("colors.black") alpha(80%));
}

body {
	background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 152 152'%3E%3Cg fill-rule='evenodd'%3E%3Cg fill='%23edf2f7'%3E%3Cpath d='M152 150v2H0v-2h28v-8H8v-20H0v-2h8V80h42v20h20v42H30v8h90v-8H80v-42h20V80h42v40h8V30h-8v40h-42V50H80V8h40V0h2v8h20v20h8V0h2v150zm-2 0v-28h-8v20h-20v8h28zM82 30v18h18V30H82zm20 18h20v20h18V30h-20V10H82v18h20v20zm0 2v18h18V50h-18zm20-22h18V10h-18v18zm-54 92v-18H50v18h18zm-20-18H28V82H10v38h20v20h38v-18H48v-20zm0-2V82H30v18h18zm-20 22H10v18h18v-18zm54 0v18h38v-20h20V82h-18v20h-20v20H82zm18-20H82v18h18v-18zm2-2h18V82h-18v18zm20 40v-18h18v18h-18zM30 0h-2v8H8v20H0v2h8v40h42V50h20V8H30V0zm20 48h18V30H50v18zm18-20H48v20H28v20H10V30h20V10h38v18zM30 50h18v18H30V50zm-2-40H10v18h18V10z'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E");
	background-position: 50% 50%;
	background-size: 152px 152px;
}

/*
 * Example usage of Tailwind's pseudo-class variants generator method.
 *
 * Variants take precendence in the order in which they are listed. In the rule
 * below, the `active` variant below will take precedence over `hover`. It is
 * recommended to refactor variants extensions to a plugin where possible.
 */
@variants hover, active {
	.rotate-10 {
		transform: rotate(10deg);
	}
}

/*
 * Example components using Tailwind's component extraction method. Components
 * should always be defined before importing Tailwind's utilities.
 *
 * Base components can be extended via JavaScript plugins. It is recommended to
 * refactor components and utilities to a plugin where possible.
 */
@import "./btn-action.css";

.custom-header {
	@apply pr-4 relative text-5xl;

	color: var(--opaque-black);

	/*
	 * FontMagician imports the font below automatically (only if it's used in
	 * a selector) from the defined 'foundries' in the plugin's configuration.
	 *
	 * Most fonts are defined within the Tailwind configuration and will be
	 * automatically imported if needed. The rule below exists only to
	 * demonstrate when FontMagician works.
	 */
	font-family: var(--custom-header-font-family) !important;

	/*
	 * FontMagician won't import the font weight below due to the strict
	 * 'variants' definitions in the plugin's configuration.
	 *
	 * Removing all 'variants' definitions will enable every available weight
	 * to be imported (if used within a selector).
	 */
	font-weight: var(--custom-header-font-weight);

	&:after {
		@apply absolute rounded-full;

		/*
		 * The EasingGradients plugin allows the use of animation timing
		 * functions to create curve-based gradient color transitions. The
		 * number of color stops and alpha decimal places will be generated
		 * according to the plugin's configuration.
		 *
		 * The default color space used for mixing is 'lrgb'. This can be
		 * modified to achieve different results.
		 */
		background-image:
			linear-gradient(
				45deg,
				theme("colors.blue.500"),
				ease,
				theme("colors.pink.300")
			);
		content: "";
		height: 1rem;
		width: 1rem;
	}
}

@tailwind utilities;
